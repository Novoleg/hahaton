{{- $port := .Values.service.targetPort }}
{{- $root := . -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "novoleg-stateless.fullname" . }}
  labels:
    {{- include "novoleg-stateless.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployments.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "novoleg-stateless.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.deployments.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "novoleg-stateless.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.deployments.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "novoleg-stateless.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.deployments.podSecurityContext | nindent 8 }}
      {{- with .Values.deployments.initContainers}}
      initContainers:
      {{- range . }}
      - name: {{ .name }}
        image: "{{ .image.repository }}:{{ .image.tag }}"
        imagePullPolicy: {{ .image.pullPolicy }}
        command: {{- include "helpers.tplvalues.render" ( dict "value" .command "context" $) | nindent 10 }}
        {{- with .resources }}
        resources: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
      {{ end }}
      {{- end }}
      {{- with .Values.deployments.containers}}
      containers:
      {{- range $containerName, $containerValues := . }}
      - name: {{ .name }}
        image: "{{ .image.repository }}:{{ .image.tag }}"
        imagePullPolicy: {{ .image.pullPolicy }}
        {{- if .command }}
        command: {{- include "helpers.tplvalues.render" ( dict "value" .command "context" $) | nindent 10 }}
        {{- else }}
        command: []
        {{- end }}
        {{- if or .env .secretEnv  }}
        envFrom:
          {{- if .env }}
          - configMapRef:
              name: {{ include "novoleg-stateless.fullname" $root }}-{{ $containerName }}-cm-env
          {{- end }}
          {{- if .secretEnv }}
          - secretRef:
              name: {{ include "novoleg-stateless.fullname" $root }}-{{ $containerName }}-secret-env
          {{- end }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ $port }}
          protocol: TCP
        {{ if .probe}}
        livenessProbe:
          httpGet:
            path: /health
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
        {{ end }}
        {{- with .resources }}
        resources: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
      {{ end }}
      {{- end }}
      {{- with .Values.deployments.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployments.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployments.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
